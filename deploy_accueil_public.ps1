# Script de d√©ploiement - Page d'Accueil Publique
# Date: 2025-10-04

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  D√âPLOIEMENT PAGE ACCUEIL PUBLIQUE" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# 1. V√©rifier le statut Git
Write-Host "üìä V√©rification du statut Git..." -ForegroundColor Yellow
git status --short
Write-Host ""

# 2. Ajouter tous les fichiers
Write-Host "‚ûï Ajout des fichiers modifi√©s..." -ForegroundColor Yellow
git add .
Write-Host "‚úÖ Fichiers ajout√©s" -ForegroundColor Green
Write-Host ""

# 3. Afficher les fichiers √† commiter
Write-Host "üìù Fichiers √† commiter:" -ForegroundColor Yellow
git status --short
Write-Host ""

# 4. Demander confirmation
$confirmation = Read-Host "Voulez-vous continuer avec le commit? (O/N)"
if ($confirmation -ne 'O' -and $confirmation -ne 'o') {
    Write-Host "‚ùå Op√©ration annul√©e" -ForegroundColor Red
    exit
}

# 5. Commit avec message
Write-Host ""
Write-Host "üíæ Cr√©ation du commit..." -ForegroundColor Yellow
$commitMessage = @"
Feature: Page d'accueil publique pour suivi v√©hicules en location

NOUVELLE FONCTIONNALIT√â:
- Page publique accessible sans authentification (/accueil/)
- Permet aux propri√©taires de consulter l'√©tat de leurs v√©hicules
- Interface moderne et responsive avec Bootstrap 5
- Auto-refresh toutes les 5 minutes

FONCTIONNALIT√âS:
‚úÖ Statistiques globales (total, actifs, panne, entretien)
‚úÖ Informations d√©taill√©es par v√©hicule
‚úÖ Badges color√©s par statut (vert/rouge/jaune/gris)
‚úÖ Affichage propri√©taire (nom, contact, t√©l√©phone)
‚úÖ Commentaires et p√©riode de location
‚úÖ Design responsive (mobile/desktop)

FICHIERS CR√â√âS:
- fleet_app/templates/fleet_app/locations/accueil_public.html
- Documentation compl√®te (7 fichiers MD)

FICHIERS MODIFI√âS:
- fleet_app/views_location.py (ajout fonction accueil_public)
- fleet_management/urls.py (ajout route /accueil/)
- fleet_app/context_processors.py (fix pour requ√™tes sans auth)

TESTS:
‚úÖ Tous les tests pass√©s avec succ√®s

URL: /accueil/
"@

git commit -m $commitMessage
Write-Host "‚úÖ Commit cr√©√©" -ForegroundColor Green
Write-Host ""

# 6. Afficher le dernier commit
Write-Host "üìã Dernier commit:" -ForegroundColor Yellow
git log -1 --oneline
Write-Host ""

# 7. Demander confirmation pour push
$pushConfirmation = Read-Host "Voulez-vous pusher vers GitHub? (O/N)"
if ($pushConfirmation -ne 'O' -and $pushConfirmation -ne 'o') {
    Write-Host "‚ö†Ô∏è  Commit local cr√©√© mais pas push√©" -ForegroundColor Yellow
    Write-Host "Pour pusher plus tard: git push origin main" -ForegroundColor Cyan
    exit
}

# 8. Push vers GitHub
Write-Host ""
Write-Host "üöÄ Push vers GitHub..." -ForegroundColor Yellow
git push origin main

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Push r√©ussi!" -ForegroundColor Green
    Write-Host ""
    Write-Host "========================================" -ForegroundColor Cyan
    Write-Host "  D√âPLOIEMENT TERMIN√â AVEC SUCC√àS!" -ForegroundColor Green
    Write-Host "========================================" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "üìå Prochaines √©tapes:" -ForegroundColor Yellow
    Write-Host "  1. D√©ployer sur PythonAnywhere" -ForegroundColor White
    Write-Host "  2. Tester en production: /accueil/" -ForegroundColor White
    Write-Host "  3. Partager l'URL avec les propri√©taires" -ForegroundColor White
    Write-Host ""
} else {
    Write-Host "‚ùå Erreur lors du push" -ForegroundColor Red
    Write-Host "V√©rifiez votre connexion et r√©essayez" -ForegroundColor Yellow
}
