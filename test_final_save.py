#!/usr/bin/env python
"""
Test final pour v√©rifier que la sauvegarde des montants fonctionne
"""
import os
import sys
import django
from django.conf import settings

# Ajouter le r√©pertoire du projet au path
sys.path.append('c:/Users/faral/Desktop/Gestion_parck')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'fleet_management.settings')
django.setup()

from django.contrib.auth.models import User
from fleet_app.models_entreprise import ConfigurationMontantStatut

def test_final_save():
    """Test final de la sauvegarde"""
    print("üéØ TEST FINAL DE SAUVEGARDE DES MONTANTS")
    print("=" * 60)
    
    try:
        # R√©cup√©rer le premier utilisateur
        user = User.objects.first()
        if not user:
            print("‚ùå Aucun utilisateur trouv√©")
            return
            
        print(f"üë§ Utilisateur: {user.username}")
        
        # R√©cup√©rer la configuration
        config = ConfigurationMontantStatut.get_or_create_for_user(user)
        
        # Afficher l'√©tat initial
        print(f"\nüìä √âTAT INITIAL:")
        print(f"  - montant_absent: {config.montant_absent}")
        print(f"  - montant_am: {config.montant_am}")
        print(f"  - montant_pm: {config.montant_pm}")
        
        # Test de sauvegarde multiple
        print(f"\nüîß TEST DE SAUVEGARDE MULTIPLE:")
        
        # Test 1: Montant absent
        config.montant_absent = 15000
        config.save()
        config.refresh_from_db()
        print(f"  ‚úÖ montant_absent: {config.montant_absent}")
        
        # Test 2: Montant matin
        config.montant_am = 8000
        config.save()
        config.refresh_from_db()
        print(f"  ‚úÖ montant_am: {config.montant_am}")
        
        # Test 3: Montant apr√®s-midi
        config.montant_pm = 8000
        config.save()
        config.refresh_from_db()
        print(f"  ‚úÖ montant_pm: {config.montant_pm}")
        
        # Test 4: Montant journ√©e
        config.montant_journee = 16000
        config.save()
        config.refresh_from_db()
        print(f"  ‚úÖ montant_journee: {config.montant_journee}")
        
        print(f"\nüéâ TOUS LES TESTS DE SAUVEGARDE R√âUSSIS!")
        print(f"üìã La configuration est maintenant pr√™te pour l'interface utilisateur.")
        
        # Afficher un r√©sum√©
        print(f"\nüìà R√âSUM√â DES MONTANTS CONFIGUR√âS:")
        print(f"  - Absent: {config.montant_absent} GNF")
        print(f"  - Matin: {config.montant_am} GNF") 
        print(f"  - Apr√®s-midi: {config.montant_pm} GNF")
        print(f"  - Journ√©e: {config.montant_journee} GNF")
        print(f"  - Dimanche matin: {config.montant_dim_am} GNF")
        print(f"  - Dimanche apr√®s-midi: {config.montant_dim_pm} GNF")
        print(f"  - Dimanche journ√©e: {config.montant_dim_journee} GNF")
        print(f"  - Maladie: {config.montant_maladie} GNF")
        print(f"  - Maladie pay√©e: {config.montant_maladie_payee} GNF")
        print(f"  - Cong√©: {config.montant_conge} GNF")
        print(f"  - Formation: {config.montant_formation} GNF")
        print(f"  - Repos: {config.montant_repos} GNF")
        
    except Exception as e:
        print(f"‚ùå ERREUR: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_final_save()
