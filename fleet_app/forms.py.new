from django import forms
from .models import Vehicule, DistanceParcourue, ConsommationCarburant, DisponibiliteVehicule, CoutFonctionnement, CoutFinancier, IncidentSecurite, UtilisationActif, UtilisationVehicule, Chauffeur, FeuilleDeRoute

class VehiculeForm(forms.ModelForm):
    class Meta:
        model = Vehicule
        fields = ['id_vehicule', 'immatriculation', 'marque', 'modele', 'type_moteur', 'categorie', 
                 'date_mise_service', 'date_acquisition', 'kilometrage_initial', 'affectation', 
                 'statut_actuel', 'numero_chassis', 'numero_moteur', 'observations', 'chauffeur_principal']
        widgets = {
            'id_vehicule': forms.TextInput(attrs={'class': 'form-control'}),
            'immatriculation': forms.TextInput(attrs={'class': 'form-control'}),
            'marque': forms.TextInput(attrs={'class': 'form-control'}),
            'modele': forms.TextInput(attrs={'class': 'form-control'}),
            'type_moteur': forms.Select(attrs={'class': 'form-select'}),
            'categorie': forms.Select(attrs={'class': 'form-select'}),
            'date_mise_service': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'date_acquisition': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'kilometrage_initial': forms.NumberInput(attrs={'class': 'form-control'}),
            'affectation': forms.TextInput(attrs={'class': 'form-control'}),
            'statut_actuel': forms.Select(attrs={'class': 'form-select'}),
            'numero_chassis': forms.TextInput(attrs={'class': 'form-control'}),
            'numero_moteur': forms.TextInput(attrs={'class': 'form-control'}),
            'observations': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'chauffeur_principal': forms.Select(attrs={'class': 'form-select'}),
        }

class DistanceForm(forms.ModelForm):
    class Meta:
        model = DistanceParcourue
        fields = ['vehicule', 'date_debut', 'date_fin', 'km_debut', 'km_fin', 'distance_parcourue', 'limite_annuelle']
        widgets = {
            'date_debut': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'date_fin': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'km_debut': forms.NumberInput(attrs={'class': 'form-control km-input', 'min': '0', 'step': '1', 'placeholder': 'Kilométrage initial', 'required': 'required'}),
            'km_fin': forms.NumberInput(attrs={'class': 'form-control km-input', 'min': '0', 'step': '1', 'placeholder': 'Kilométrage final', 'required': 'required'}),
            'distance_parcourue': forms.NumberInput(attrs={'class': 'form-control', 'readonly': 'readonly', 'placeholder': 'Calculé automatiquement'}),
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
            'limite_annuelle': forms.NumberInput(attrs={'class': 'form-control', 'placeholder': 'Optionnel'}),
        }
        
    def save(self, commit=True):
        instance = super().save(commit=False)
        # Récupérer automatiquement le type de moteur du véhicule sélectionné
        if instance.vehicule:
            instance.type_moteur = instance.vehicule.type_moteur
        if commit:
            instance.save()
        return instance

# Formulaire de consommation supprimé car remplacé par ConsommationCarburantForm

# Formulaires pour les feuilles de route
class FeuilleRouteForm(forms.ModelForm):
    class Meta:
        model = FeuilleDeRoute
        fields = ['vehicule', 'chauffeur', 'date_depart', 'heure_depart', 'km_depart', 'destination', 'objet_deplacement']
        widgets = {
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
            'chauffeur': forms.Select(attrs={'class': 'form-select'}),
            'date_depart': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'heure_depart': forms.TimeInput(attrs={'type': 'time', 'class': 'form-control'}),
            'km_depart': forms.NumberInput(attrs={'class': 'form-control', 'min': '0'}),
            'destination': forms.TextInput(attrs={'class': 'form-control'}),
            'objet_deplacement': forms.Select(attrs={'class': 'form-select'}),
        }

class FeuilleRouteUpdateForm(forms.ModelForm):
    class Meta:
        model = FeuilleDeRoute
        fields = ['date_retour', 'heure_retour', 'km_retour', 'carburant_retour', 'signature_chauffeur']
        widgets = {
            'date_retour': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'heure_retour': forms.TimeInput(attrs={'type': 'time', 'class': 'form-control'}),
            'km_retour': forms.NumberInput(attrs={'class': 'form-control', 'min': '0'}),
            'carburant_retour': forms.NumberInput(attrs={'class': 'form-control', 'min': '0', 'step': '0.01'}),
            'signature_chauffeur': forms.CheckboxInput(attrs={'class': 'form-check-input'}),
        }
        
    def save(self, commit=True):
        instance = super().save(commit=False)
        # Calculer automatiquement la distance parcourue
        if instance.km_depart is not None and instance.km_retour is not None and instance.km_retour > instance.km_depart:
            instance.distance_parcourue = instance.km_retour - instance.km_depart
            
            # Calculer automatiquement le carburant utilisé
            if instance.carburant_depart is not None and instance.carburant_retour is not None:
                instance.carburant_utilise = instance.carburant_depart - instance.carburant_retour
                
                # Calculer automatiquement la consommation aux 100km
                if instance.distance_parcourue > 0:
                    instance.consommation = (instance.carburant_utilise * 100) / instance.distance_parcourue
        
        if commit:
            instance.save()
        return instance

class DisponibiliteForm(forms.ModelForm):
    class Meta:
        model = DisponibiliteVehicule
        fields = ['vehicule', 'date_debut', 'date_fin', 'heures_disponibles', 'heures_totales', 'disponibilite_pourcentage', 'raison_indisponibilite']
        widgets = {
            'date_debut': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'date_fin': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'heures_disponibles': forms.NumberInput(attrs={'class': 'form-control'}),
            'heures_totales': forms.NumberInput(attrs={'class': 'form-control'}),
            'disponibilite_pourcentage': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.01'}),
            'raison_indisponibilite': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
        }

class CoutFonctionnementForm(forms.ModelForm):
    class Meta:
        model = CoutFonctionnement
        fields = ['vehicule', 'date', 'type_cout', 'montant', 'kilometrage', 'cout_par_km', 'description']
        widgets = {
            'date': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'type_cout': forms.TextInput(attrs={'class': 'form-control'}),
            'montant': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.01'}),
            'kilometrage': forms.NumberInput(attrs={'class': 'form-control'}),
            'cout_par_km': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.0001'}),
            'description': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
        }

class CoutFinancierForm(forms.ModelForm):
    class Meta:
        model = CoutFinancier
        fields = ['vehicule', 'date', 'type_cout', 'montant', 'kilometrage', 'cout_par_km', 'periode_amortissement', 'description']
        widgets = {
            'date': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'type_cout': forms.TextInput(attrs={'class': 'form-control'}),
            'montant': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.01'}),
            'kilometrage': forms.NumberInput(attrs={'class': 'form-control'}),
            'cout_par_km': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.0001'}),
            'periode_amortissement': forms.NumberInput(attrs={'class': 'form-control'}),
            'description': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
        }

class IncidentSecuriteForm(forms.ModelForm):
    class Meta:
        model = IncidentSecurite
        fields = ['vehicule', 'date_incident', 'conducteur', 'type_incident', 'gravite', 'lieu', 'description', 'mesures_prises', 'commentaires']
        widgets = {
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
            'date_incident': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'conducteur': forms.Select(attrs={'class': 'form-select'}),
            'type_incident': forms.Select(attrs={'class': 'form-select'}),
            'gravite': forms.Select(attrs={'class': 'form-select'}),
            'lieu': forms.TextInput(attrs={'class': 'form-control'}),
            'description': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'mesures_prises': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'commentaires': forms.Textarea(attrs={'class': 'form-control', 'rows': 2}),
        }

class ConsommationCarburantForm(forms.ModelForm):
    class Meta:
        model = ConsommationCarburant
        fields = ['vehicule', 'date_plein1', 'km_plein1', 'date_plein2', 'km_plein2', 'litres_ajoutes', 'distance_parcourue', 'consommation_100km', 'consommation_constructeur']
        widgets = {
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
            'date_plein1': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'km_plein1': forms.NumberInput(attrs={'class': 'form-control'}),
            'date_plein2': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'km_plein2': forms.NumberInput(attrs={'class': 'form-control'}),
            'litres_ajoutes': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.01'}),
            'distance_parcourue': forms.NumberInput(attrs={'class': 'form-control'}),
            'consommation_100km': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.01'}),
            'consommation_constructeur': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.01'}),
        }

class UtilisationActifForm(forms.ModelForm):
    class Meta:
        model = UtilisationActif
        fields = ['vehicule', 'date_debut', 'date_fin', 'conducteur', 'departement', 'motif_utilisation']
        widgets = {
            'date_debut': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'date_fin': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'conducteur': forms.Select(attrs={'class': 'form-select'}),
            'departement': forms.TextInput(attrs={'class': 'form-control'}),
            'motif_utilisation': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
        }

class UtilisationVehiculeForm(forms.ModelForm):
    class Meta:
        model = UtilisationVehicule
        fields = ['vehicule', 'date_debut', 'date_fin', 'conducteur', 'departement', 'motif', 'km_depart', 'km_retour', 'observations']
        widgets = {
            'date_debut': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'date_fin': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'conducteur': forms.Select(attrs={'class': 'form-select'}),
            'departement': forms.Select(attrs={'class': 'form-select'}),
            'motif': forms.TextInput(attrs={'class': 'form-control'}),
            'km_depart': forms.NumberInput(attrs={'class': 'form-control'}),
            'km_retour': forms.NumberInput(attrs={'class': 'form-control'}),
            'observations': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
        }


class ChauffeurForm(forms.ModelForm):
    class Meta:
        model = Chauffeur
        fields = ['nom', 'prenom', 'numero_permis', 'date_embauche', 'telephone', 'email', 'statut']
        widgets = {
            'nom': forms.TextInput(attrs={'class': 'form-control'}),
            'prenom': forms.TextInput(attrs={'class': 'form-control'}),
            'numero_permis': forms.TextInput(attrs={'class': 'form-control'}),
            'date_embauche': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'telephone': forms.TextInput(attrs={'class': 'form-control'}),
            'email': forms.EmailInput(attrs={'class': 'form-control'}),
            'statut': forms.TextInput(attrs={'class': 'form-control'}),
        }


class FeuilleDeRouteForm(forms.ModelForm):
    class Meta:
        model = FeuilleDeRoute
        fields = ['vehicule', 'chauffeur', 'date_depart', 'heure_depart', 'destination', 'objet_deplacement']
        widgets = {
            'vehicule': forms.Select(attrs={'class': 'form-select'}),
            'chauffeur': forms.Select(attrs={'class': 'form-select'}),
            'date_depart': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'heure_depart': forms.TimeInput(attrs={'type': 'time', 'class': 'form-control'}),
            'destination': forms.TextInput(attrs={'class': 'form-control'}),
            'objet_deplacement': forms.Select(attrs={'class': 'form-select'}),
        }


class FeuilleDeRouteUpdateForm(forms.ModelForm):
    class Meta:
        model = FeuilleDeRoute
        fields = ['km_depart', 'carburant_depart', 'km_retour', 'carburant_retour', 'date_retour', 'heure_retour']
        widgets = {
            'km_depart': forms.NumberInput(attrs={'class': 'form-control'}),
            'carburant_depart': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.01'}),
            'km_retour': forms.NumberInput(attrs={'class': 'form-control'}),
            'carburant_retour': forms.NumberInput(attrs={'class': 'form-control', 'step': '0.01'}),
            'date_retour': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'heure_retour': forms.TimeInput(attrs={'type': 'time', 'class': 'form-control'}),
        }
