# Generated by Django 5.2.3 on 2025-08-05 11:26

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import fleet_app.models_facturation
import fleet_app.models_inventaire
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chauffeur',
            fields=[
                ('id_chauffeur', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('numero_permis', models.CharField(max_length=50, verbose_name='Numéro de permis')),
                ('date_embauche', models.DateField(verbose_name="Date d'embauche")),
                ('date_expiration_permis', models.DateField(blank=True, null=True, verbose_name="Date d'expiration du permis")),
                ('telephone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('statut', models.CharField(default='Actif', max_length=20, verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Chauffeur',
                'verbose_name_plural': 'Chauffeurs',
                'db_table': 'Chauffeurs',
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('numero', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Numéro de commande')),
                ('date_creation', models.DateField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('date_livraison_prevue', models.DateField(blank=True, null=True, verbose_name='Date de livraison prévue')),
                ('date_livraison_reelle', models.DateField(blank=True, null=True, verbose_name='Date de livraison réelle')),
                ('fournisseur', models.CharField(max_length=100, verbose_name='Fournisseur')),
                ('adresse_fournisseur', models.TextField(blank=True, verbose_name='Adresse du fournisseur')),
                ('telephone_fournisseur', models.CharField(blank=True, max_length=20, verbose_name='Téléphone du fournisseur')),
                ('email_fournisseur', models.EmailField(blank=True, max_length=254, verbose_name='Email du fournisseur')),
                ('montant_total', models.DecimalField(decimal_places=0, default=0, max_digits=15, verbose_name='Montant total (GNF)')),
                ('remise', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Remise (%)')),
                ('montant_final', models.DecimalField(decimal_places=0, default=0, max_digits=15, verbose_name='Montant final (GNF)')),
                ('statut', models.CharField(choices=[('Brouillon', 'Brouillon'), ('En attente', 'En attente de validation'), ('Validée', 'Validée'), ('En cours', 'En cours de traitement'), ('Livrée', 'Livrée'), ('Annulée', 'Annulée')], default='Brouillon', max_length=20, verbose_name='Statut')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('document_signe', models.FileField(blank=True, null=True, upload_to=fleet_app.models_inventaire.Commande.get_commande_upload_path, verbose_name='Document signé')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-date_creation', 'numero'],
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id_produit', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='ID Produit')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom du produit')),
                ('categorie', models.CharField(choices=[('Alimentaire', 'Alimentaire'), ('Hygiène', 'Hygiène'), ('Fourniture', 'Fourniture'), ('Équipement', 'Équipement'), ('Pièce', 'Pièce détachée'), ('Autre', 'Autre')], max_length=50, verbose_name='Catégorie')),
                ('unite', models.CharField(choices=[('Pièce', 'Pièce'), ('Carton', 'Carton'), ('Sac', 'Sac'), ('Kg', 'Kilogramme'), ('Litre', 'Litre'), ('Mètre', 'Mètre'), ('Autre', 'Autre')], max_length=20, verbose_name='Unité')),
                ('seuil_minimum', models.PositiveIntegerField(default=0, verbose_name='Seuil minimum')),
                ('prix_unitaire', models.DecimalField(decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix unitaire (GNF)')),
                ('fournisseur', models.CharField(max_length=100, verbose_name='Fournisseur')),
                ('date_ajout', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'ajout")),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['id_produit'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationChargesSociales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('taux', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Taux (%)')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ConfigurationChargesSociales',
            },
        ),
        migrations.CreateModel(
            name='ConfigurationHeureSupplementaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salaire_mensuel_base', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire mensuel de base')),
                ('heures_normales_mois', models.DecimalField(decimal_places=2, default=173.33, max_digits=5, verbose_name='Heures normales par mois')),
                ('taux_jour_ouvrable', models.DecimalField(decimal_places=2, default=1.5, max_digits=5, verbose_name='Taux jour ouvrable')),
                ('montant_jour_ouvrable', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant jour ouvrable')),
                ('taux_dimanche_ferie', models.DecimalField(decimal_places=2, default=2.0, max_digits=5, verbose_name='Taux dimanche/férié')),
                ('montant_dimanche_ferie', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant dimanche/férié')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuration heure supplémentaire',
                'verbose_name_plural': 'Configurations heures supplémentaires',
                'db_table': 'ConfigurationHeureSupplementaire',
            },
        ),
        migrations.CreateModel(
            name='ConfigurationMontantStatut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(max_length=100, verbose_name='Statut')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ConfigurationMontantStatut',
            },
        ),
        migrations.CreateModel(
            name='DataSynchronizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('derniere_sync', models.DateTimeField(auto_now=True, verbose_name='Dernière synchronisation')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'DataSynchronizer',
            },
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=20, unique=True, verbose_name='Matricule')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('fonction', models.CharField(max_length=100, verbose_name='Fonction')),
                ('salaire_base', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire de base')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('date_embauche', models.DateField(blank=True, null=True, verbose_name="Date d'embauche")),
                ('statut', models.CharField(blank=True, max_length=50, null=True, verbose_name='Statut')),
                ('salaire_journalier', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire journalier')),
                ('avances', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Avances')),
                ('montant_heure_supp_jour_ouvrable', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant heure supp. jour ouvrable')),
                ('montant_heure_supp_dimanche_ferie', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant heure supp. dimanche/férié')),
                ('mode_calcul_heures_supp', models.CharField(default='standard', max_length=50, verbose_name='Mode calcul heures supp.')),
                ('taux_horaire_specifique', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Taux horaire spécifique')),
                ('taux_cnss_salarie_custom', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux CNSS salarié personnalisé')),
                ('taux_cnss_employeur_custom', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux CNSS employeur personnalisé')),
                ('calcul_salaire_auto', models.BooleanField(default=True, verbose_name='Calcul salaire automatique')),
                ('appliquer_rts', models.BooleanField(default=True, verbose_name='Appliquer RTS')),
                ('appliquer_cnss', models.BooleanField(default=True, verbose_name='Appliquer CNSS')),
                ('taux_vf_custom', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux VF personnalisé')),
                ('appliquer_vf', models.BooleanField(default=False, verbose_name='Appliquer VF')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employé',
                'verbose_name_plural': 'Employés',
                'db_table': 'Employes',
            },
        ),
        migrations.CreateModel(
            name='ConfigurationSalaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salaire_base', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Salaire de base')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet_app.employe', verbose_name='Employé')),
            ],
            options={
                'db_table': 'ConfigurationSalaire',
            },
        ),
        migrations.CreateModel(
            name='ConfigurationMontantEmploye',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet_app.employe', verbose_name='Employé')),
            ],
            options={
                'db_table': 'ConfigurationMontantEmploye',
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('numero', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Numéro')),
                ('reference', models.CharField(blank=True, max_length=50, null=True, verbose_name='Référence')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_emission', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'émission")),
                ('date_echeance', models.DateField(blank=True, null=True, verbose_name="Date d'échéance")),
                ('tiers_nom', models.CharField(max_length=100, verbose_name='Nom/Société')),
                ('tiers_adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('tiers_telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('tiers_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('mode_paiement', models.CharField(default='Espèces', max_length=50, verbose_name='Mode de paiement')),
                ('delai_paiement', models.CharField(default='À réception de facture', max_length=50, verbose_name='Délai de paiement')),
                ('banque', models.CharField(blank=True, max_length=100, null=True, verbose_name='Banque')),
                ('rib', models.CharField(blank=True, max_length=50, null=True, verbose_name='RIB')),
                ('montant_total', models.DecimalField(decimal_places=0, default=0, max_digits=15, verbose_name='Montant total (GNF)')),
                ('remise', models.DecimalField(decimal_places=0, default=0, max_digits=15, verbose_name='Remise (GNF)')),
                ('tva', models.DecimalField(decimal_places=0, default=0, max_digits=15, verbose_name='TVA (GNF)')),
                ('montant_final', models.DecimalField(decimal_places=0, default=0, max_digits=15, verbose_name='Montant final (GNF)')),
                ('statut', models.CharField(choices=[('brouillon', 'Brouillon'), ('validee', 'Validée'), ('envoyee', 'Envoyée'), ('payee', 'Payée'), ('annulee', 'Annulée')], default='brouillon', max_length=20, verbose_name='Statut')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('document_signe', models.FileField(blank=True, null=True, upload_to=fleet_app.models_facturation.Facture.get_facture_upload_path, verbose_name='Document signé')),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Facture',
                'verbose_name_plural': 'Factures',
                'ordering': ['-date_emission', 'numero'],
            },
        ),
        migrations.CreateModel(
            name='FicheBordMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('machine', models.CharField(max_length=100, verbose_name='Machine')),
                ('site', models.CharField(max_length=100, verbose_name='Site')),
                ('chauffeur', models.CharField(max_length=100, verbose_name='Chauffeur')),
                ('mois', models.IntegerField(verbose_name='Mois')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('compteur_debut', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Compteur début')),
                ('compteur_fin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Compteur fin')),
                ('distance_parcourue', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Distance parcourue')),
                ('heures_travail', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Heures de travail')),
                ('carburant_consomme', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Carburant consommé')),
                ('dernier_service_date', models.DateField(blank=True, null=True, verbose_name='Date dernier service')),
                ('dernier_service_heure', models.TimeField(blank=True, null=True, verbose_name='Heure dernier service')),
                ('dernier_service_compteur', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Compteur dernier service')),
                ('prochain_service_date', models.DateField(blank=True, null=True, verbose_name='Date prochain service')),
                ('prochain_service_heure', models.TimeField(blank=True, null=True, verbose_name='Heure prochain service')),
                ('prochain_service_compteur', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Compteur prochain service')),
                ('observations', models.TextField(blank=True, null=True, verbose_name='Observations')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fiche de bord machine',
                'verbose_name_plural': 'Fiches de bord machines',
                'db_table': 'FicheBordMachine',
                'unique_together': {('machine', 'mois', 'annee')},
            },
        ),
        migrations.CreateModel(
            name='EntreeFicheBord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('matricule', models.CharField(max_length=50, verbose_name='Matricule')),
                ('responsable', models.CharField(max_length=100, verbose_name='Responsable')),
                ('heure', models.TimeField(verbose_name='Heure')),
                ('demarrage_heure', models.TimeField(verbose_name='Heure de démarrage')),
                ('arret_heure', models.TimeField(verbose_name="Heure d'arrêt")),
                ('duree_travail_heure', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Durée travail (heures)')),
                ('demarrage_compteur', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Compteur démarrage')),
                ('arret_compteur', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Compteur arrêt')),
                ('duree_travail_compteur', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Durée travail compteur')),
                ('carburant_heure', models.TimeField(blank=True, null=True, verbose_name='Heure carburant')),
                ('carburant_quantite', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Quantité carburant')),
                ('carburant_prix_unitaire', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prix unitaire carburant')),
                ('carburant_cout_total', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Coût total carburant')),
                ('description', models.TextField(verbose_name='Description')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observations')),
                ('fiche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet_app.fichebordmachine', verbose_name='Fiche')),
                ('fiche_bord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entrees', to='fleet_app.fichebordmachine', verbose_name='Fiche de bord')),
            ],
            options={
                'verbose_name': 'Entrée fiche de bord',
                'verbose_name_plural': 'Entrées fiches de bord',
                'db_table': 'EntreeFicheBord',
            },
        ),
        migrations.CreateModel(
            name='FicheOr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('mois', models.IntegerField(verbose_name='Mois')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fiche Or',
                'verbose_name_plural': 'Fiches Or',
                'db_table': 'FicheOr',
                'unique_together': {('mois', 'annee')},
            },
        ),
        migrations.CreateModel(
            name='EntreeFicheOr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('lieu', models.CharField(max_length=100, verbose_name='Lieu')),
                ('heure_demarrage', models.TimeField(verbose_name='Heure de démarrage')),
                ('heure_arret', models.TimeField(verbose_name="Heure d'arrêt")),
                ('demarrage_travail', models.TimeField(verbose_name='Démarrage travail')),
                ('arret_travail', models.TimeField(verbose_name='Arrêt travail')),
                ('duree_heures', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Durée (heures)')),
                ('effectif_demarrage', models.IntegerField(default=0, verbose_name='Effectif démarrage')),
                ('effectif_arret', models.IntegerField(default=0, verbose_name='Effectif arrêt')),
                ('quantite', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Quantité')),
                ('quantite_obtenue', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='Quantité obtenue')),
                ('qualite_carat', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Qualité (carat)')),
                ('total_obtenu', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='Total obtenu')),
                ('fiche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet_app.ficheor', verbose_name='Fiche')),
                ('fiche_or', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entrees', to='fleet_app.ficheor', verbose_name='Fiche Or')),
            ],
            options={
                'verbose_name': 'Entrée fiche Or',
                'verbose_name_plural': 'Entrées fiches Or',
                'db_table': 'EntreeFicheOr',
            },
        ),
        migrations.CreateModel(
            name='ParametrePaie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom du paramètre')),
                ('valeur', models.CharField(max_length=255, verbose_name='Valeur')),
                ('cle', models.CharField(blank=True, max_length=100, null=True, verbose_name='Clé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paramètre de paie',
                'verbose_name_plural': 'Paramètres de paie',
                'db_table': 'ParametresPaie',
            },
        ),
        migrations.CreateModel(
            name='PeseeCamion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Numéro de téléphone')),
                ('plate', models.CharField(max_length=20, verbose_name="Plaque d'immatriculation")),
                ('entry_card_number', models.CharField(max_length=20, verbose_name="Numéro de carte d'entrée")),
                ('loading_zone', models.CharField(max_length=100, verbose_name='Zone de chargement')),
                ('departure_time', models.TimeField(verbose_name='Heure de départ')),
                ('weighing_start', models.TimeField(verbose_name='Heure de début de pesée')),
                ('weighing_end', models.TimeField(verbose_name='Heure de fin de pesée')),
                ('observation', models.TextField(blank=True, verbose_name='Observations')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantité (tonnes)')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pesée de camion',
                'verbose_name_plural': 'Pesées de camions',
                'db_table': 'PeseeCamions',
            },
        ),
        migrations.CreateModel(
            name='MouvementStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date du mouvement')),
                ('type_mouvement', models.CharField(choices=[('Entrée', 'Entrée'), ('Sortie', 'Sortie'), ('Ajustement', 'Ajustement')], max_length=20, verbose_name='Type de mouvement')),
                ('quantite', models.IntegerField(verbose_name='Quantité')),
                ('stock_avant', models.PositiveIntegerField(default=0, verbose_name='Stock avant')),
                ('stock_apres', models.PositiveIntegerField(default=0, verbose_name='Stock après')),
                ('observations', models.TextField(blank=True, null=True, verbose_name='Observations')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mouvements', to='fleet_app.produit', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Mouvement de stock',
                'verbose_name_plural': 'Mouvements de stock',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LigneFacture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, verbose_name='Description')),
                ('quantite', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité')),
                ('prix_unitaire', models.DecimalField(decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix unitaire (GNF)')),
                ('montant', models.DecimalField(decimal_places=0, max_digits=15, verbose_name='Montant (GNF)')),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='fleet_app.facture', verbose_name='Facture')),
                ('produit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='fleet_app.produit', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Ligne de facture',
                'verbose_name_plural': 'Lignes de facture',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LigneCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_produit', models.CharField(blank=True, max_length=100, verbose_name='Nom du produit')),
                ('categorie', models.CharField(blank=True, max_length=50, verbose_name='Catégorie')),
                ('quantite', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité')),
                ('prix_unitaire', models.DecimalField(decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix unitaire (GNF)')),
                ('prix_total', models.DecimalField(decimal_places=0, max_digits=15, verbose_name='Prix total (GNF)')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='fleet_app.commande', verbose_name='Commande')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fleet_app.produit', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Ligne de commande',
                'verbose_name_plural': 'Lignes de commande',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='EntreeStock',
            fields=[
                ('id_entree', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='ID Entrée')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'entrée")),
                ('quantite', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité entrée')),
                ('prix_unitaire', models.DecimalField(decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix unitaire (GNF)')),
                ('fournisseur', models.CharField(max_length=100, verbose_name='Fournisseur')),
                ('reference_facture', models.CharField(max_length=20, verbose_name='Référence facture')),
                ('stock_avant', models.PositiveIntegerField(default=0, verbose_name='Stock avant')),
                ('stock_apres', models.PositiveIntegerField(default=0, verbose_name='Stock après')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entrees', to='fleet_app.produit', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Entrée en stock',
                'verbose_name_plural': 'Entrées en stock',
                'ordering': ['-date', 'id_entree'],
            },
        ),
        migrations.CreateModel(
            name='Profil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_compte', models.CharField(choices=[('personne', 'Personne Physique'), ('entreprise', 'Entreprise / Organisation')], max_length=20, verbose_name='Type de compte')),
                ('telephone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('standard', 'Utilisateur standard'), ('rh', 'Responsable RH'), ('stock', 'Gestionnaire stock'), ('comptable', 'Comptable'), ('autre', 'Autre')], max_length=20, verbose_name='Fonction ou Rôle')),
                ('conditions_acceptees', models.BooleanField(default=False, verbose_name='Conditions acceptées')),
                ('informations_certifiees', models.BooleanField(default=False, verbose_name='Informations certifiées')),
                ('compte_complete', models.BooleanField(default=False, verbose_name='Compte complété')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil',
                'verbose_name_plural': 'Profils',
            },
        ),
        migrations.CreateModel(
            name='PersonnePhysique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_prenom', models.CharField(max_length=100, verbose_name='Nom et Prénom(s)')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profils/personnes/', verbose_name='Photo de profil')),
                ('profil', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personne_physique', to='fleet_app.profil')),
            ],
            options={
                'verbose_name': 'Personne Physique',
                'verbose_name_plural': 'Personnes Physiques',
            },
        ),
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_entreprise', models.CharField(max_length=200, verbose_name="Nom de l'entreprise")),
                ('forme_juridique', models.CharField(choices=[('sarl', 'SARL'), ('sa', 'SA'), ('ong', 'ONG'), ('ei', 'Entreprise Individuelle'), ('autre', 'Autre')], max_length=20, verbose_name='Forme juridique')),
                ('nom_responsable', models.CharField(max_length=100, verbose_name='Nom du responsable')),
                ('rccm_nif', models.CharField(blank=True, max_length=50, null=True, verbose_name='RCCM / NIF')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='profils/entreprises/', verbose_name="Logo de l'entreprise")),
                ('adresse', models.TextField(blank=True, verbose_name='Adresse complète')),
                ('telephone', models.CharField(blank=True, max_length=50, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('site_web', models.URLField(blank=True, verbose_name='Site web')),
                ('rccm', models.CharField(blank=True, max_length=100, verbose_name='RCCM (Registre de Commerce)')),
                ('nif', models.CharField(blank=True, max_length=100, verbose_name="NIF (Numéro d'Identification Fiscale)")),
                ('cnss', models.CharField(blank=True, max_length=100, verbose_name='Numéro CNSS')),
                ('banque', models.CharField(blank=True, max_length=200, verbose_name='Nom de la banque')),
                ('numero_compte', models.CharField(blank=True, max_length=100, verbose_name='Numéro de compte')),
                ('profil', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='entreprise', to='fleet_app.profil')),
            ],
            options={
                'verbose_name': 'Entreprise',
                'verbose_name_plural': 'Entreprises',
            },
        ),
        migrations.CreateModel(
            name='SortieStock',
            fields=[
                ('id_sortie', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='ID Sortie')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date de sortie')),
                ('quantite', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité sortie')),
                ('destination', models.CharField(blank=True, max_length=100, null=True, verbose_name='Destination')),
                ('motif', models.CharField(max_length=100, verbose_name='Motif')),
                ('stock_avant', models.PositiveIntegerField(default=0, verbose_name='Stock avant')),
                ('stock_apres', models.PositiveIntegerField(default=0, verbose_name='Stock après')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sorties', to='fleet_app.produit', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Sortie de stock',
                'verbose_name_plural': 'Sorties de stock',
                'ordering': ['-date', 'id_sortie'],
            },
        ),
        migrations.CreateModel(
            name='Vehicule',
            fields=[
                ('id_vehicule', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='ID Véhicule')),
                ('immatriculation', models.CharField(max_length=20, verbose_name='Immatriculation')),
                ('marque', models.CharField(max_length=50, verbose_name='Marque')),
                ('modele', models.CharField(max_length=50, verbose_name='Modèle')),
                ('type_moteur', models.CharField(choices=[('Essence', 'Essence'), ('Diesel', 'Diesel'), ('Hybride', 'Hybride'), ('Électrique', 'Électrique')], max_length=20, verbose_name='Type de moteur')),
                ('categorie', models.CharField(choices=[('Voiture', 'Voiture'), ('Moto', 'Moto'), ('4x4', '4x4'), ('Camion', 'Camion'), ('Bus', 'Bus')], max_length=20, verbose_name='Catégorie')),
                ('date_mise_service', models.DateField(blank=True, null=True, verbose_name='Date de mise en service')),
                ('date_acquisition', models.DateField(blank=True, null=True, verbose_name="Date d'acquisition")),
                ('kilometrage_initial', models.IntegerField(default=0, verbose_name='Kilométrage initial')),
                ('affectation', models.CharField(blank=True, max_length=100, verbose_name='Affectation')),
                ('statut_actuel', models.CharField(choices=[('Actif', 'Actif'), ('Maintenance', 'Maintenance'), ('Hors Service', 'Hors Service')], max_length=20, verbose_name='Statut actuel')),
                ('numero_chassis', models.CharField(blank=True, max_length=50, verbose_name='Numéro de châssis')),
                ('numero_moteur', models.CharField(blank=True, max_length=50, verbose_name='Numéro de moteur')),
                ('observations', models.TextField(blank=True, verbose_name='Observations')),
                ('chauffeur_principal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicules_assignes', to='fleet_app.chauffeur', verbose_name='Chauffeur principal')),
            ],
            options={
                'verbose_name': 'Véhicule',
                'verbose_name_plural': 'Véhicules',
            },
        ),
        migrations.CreateModel(
            name='UtilisationVehicule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('departement', models.CharField(choices=[('Commercial', 'Commercial'), ('Technique', 'Technique'), ('Administratif', 'Administratif'), ('Direction', 'Direction'), ('Logistique', 'Logistique'), ('Maintenance', 'Maintenance'), ('Autre', 'Autre')], max_length=50, verbose_name='Département')),
                ('motif', models.CharField(max_length=200, verbose_name="Motif d'utilisation")),
                ('km_depart', models.IntegerField(verbose_name='Kilométrage au départ')),
                ('km_retour', models.IntegerField(verbose_name='Kilométrage au retour')),
                ('observations', models.TextField(blank=True, verbose_name='Observations')),
                ('conducteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisations', to='fleet_app.chauffeur', verbose_name='Conducteur')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utilisations_vehicule', to='fleet_app.vehicule', verbose_name='Véhicule')),
            ],
            options={
                'verbose_name': 'Utilisation de véhicule',
                'verbose_name_plural': 'Utilisations de véhicules',
                'db_table': 'UtilisationsVehicules',
            },
        ),
        migrations.CreateModel(
            name='UtilisationActif',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_debut', models.DateField(null=True, verbose_name='Date de début')),
                ('date_fin', models.DateField(null=True, verbose_name='Date de fin')),
                ('departement', models.CharField(max_length=100, null=True, verbose_name='Département')),
                ('motif_utilisation', models.TextField(null=True, verbose_name="Motif d'utilisation")),
                ('periode', models.CharField(max_length=100, null=True)),
                ('jours_utilises', models.IntegerField(null=True)),
                ('jours_disponibles', models.IntegerField(null=True)),
                ('conducteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisations_actifs', to='fleet_app.chauffeur', verbose_name='Conducteur')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utilisations', to='fleet_app.vehicule')),
            ],
            options={
                'verbose_name': "Utilisation d'actif",
                'verbose_name_plural': "Utilisations d'actifs",
            },
        ),
        migrations.CreateModel(
            name='IncidentSecurite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_incident', models.DateField(verbose_name="Date de l'incident")),
                ('type_incident', models.CharField(choices=[('Accident', 'Accident'), ('Incident', 'Incident'), ('Défaut critique', 'Défaut critique')], max_length=20, verbose_name="Type d'incident")),
                ('gravite', models.CharField(choices=[('Faible', 'Faible'), ('Moyenne', 'Moyenne'), ('Élevée', 'Élevée')], max_length=50, verbose_name='Gravité')),
                ('lieu', models.CharField(blank=True, max_length=200, null=True, verbose_name="Lieu de l'incident")),
                ('description', models.TextField(blank=True, null=True, verbose_name="Description de l'incident")),
                ('mesures_prises', models.TextField(blank=True, null=True, verbose_name='Mesures prises')),
                ('commentaires', models.TextField(blank=True, null=True, verbose_name='Commentaires')),
                ('conducteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents', to='fleet_app.chauffeur', verbose_name='Conducteur')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='fleet_app.vehicule')),
            ],
            options={
                'verbose_name': 'Incident de sécurité',
                'verbose_name_plural': 'Incidents de sécurité',
                'db_table': 'IncidentsSecurite',
            },
        ),
        migrations.CreateModel(
            name='FeuilleDeRoute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_depart', models.DateField(verbose_name='Date de départ')),
                ('heure_depart', models.TimeField(verbose_name='Heure de départ')),
                ('destination', models.CharField(max_length=200, verbose_name='Destination')),
                ('objet_deplacement', models.CharField(choices=[('Livraison', 'Livraison'), ('Mission', 'Mission'), ('Personnel', 'Personnel')], max_length=20, verbose_name='Objet du déplacement')),
                ('signature_gestionnaire', models.BooleanField(default=False, verbose_name='Signé par le gestionnaire')),
                ('km_depart', models.IntegerField(blank=True, null=True, verbose_name='Kilométrage au départ')),
                ('carburant_depart', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Carburant au départ (L)')),
                ('km_retour', models.IntegerField(blank=True, null=True, verbose_name='Kilométrage au retour')),
                ('carburant_retour', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Carburant au retour (L)')),
                ('date_retour', models.DateField(blank=True, null=True, verbose_name='Date de retour')),
                ('heure_retour', models.TimeField(blank=True, null=True, verbose_name='Heure de retour')),
                ('signature_chauffeur', models.BooleanField(default=False, verbose_name='Signé par le chauffeur')),
                ('distance_parcourue', models.IntegerField(blank=True, null=True, verbose_name='Distance parcourue (km)')),
                ('carburant_utilise', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Carburant utilisé (L)')),
                ('consommation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Consommation (L/100km)')),
                ('alerte_surconsommation', models.BooleanField(default=False, verbose_name='Alerte de surconsommation')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('chauffeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feuilles_route', to='fleet_app.chauffeur', verbose_name='Chauffeur')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feuilles_route', to='fleet_app.vehicule', verbose_name='Véhicule')),
            ],
            options={
                'verbose_name': 'Feuille de route',
                'verbose_name_plural': 'Feuilles de route',
                'db_table': 'FeuillesDeRoute',
            },
        ),
        migrations.CreateModel(
            name='DocumentAdministratif',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_document', models.CharField(max_length=50, verbose_name='Type de document')),
                ('numero', models.CharField(max_length=50, verbose_name='Numéro')),
                ('date_emission', models.DateField(verbose_name="Date d'émission")),
                ('date_expiration', models.DateField(verbose_name="Date d'expiration")),
                ('fichier', models.FileField(blank=True, null=True, upload_to='documents/', verbose_name='Fichier')),
                ('commentaires', models.TextField(blank=True, verbose_name='Commentaires')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='fleet_app.vehicule')),
            ],
            options={
                'verbose_name': 'Document administratif',
                'verbose_name_plural': 'Documents administratifs',
            },
        ),
        migrations.CreateModel(
            name='DistanceParcourue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('km_debut', models.IntegerField(verbose_name='Kilométrage de début')),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('km_fin', models.IntegerField(verbose_name='Kilométrage de fin')),
                ('distance_parcourue', models.IntegerField(verbose_name='Distance parcourue')),
                ('type_moteur', models.CharField(max_length=20, verbose_name='Type de moteur')),
                ('limite_annuelle', models.IntegerField(blank=True, null=True, verbose_name='Limite annuelle')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distances', to='fleet_app.vehicule')),
            ],
            options={
                'verbose_name': 'Distance parcourue',
                'verbose_name_plural': 'Distances parcourues',
            },
        ),
        migrations.CreateModel(
            name='DisponibiliteVehicule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('heures_disponibles', models.IntegerField(verbose_name='Heures disponibles')),
                ('heures_totales', models.IntegerField(verbose_name='Heures totales')),
                ('disponibilite_pourcentage', models.FloatField(verbose_name='Pourcentage de disponibilité')),
                ('raison_indisponibilite', models.TextField(blank=True, verbose_name="Raison d'indisponibilité")),
                ('periode', models.CharField(blank=True, max_length=50, verbose_name='Période')),
                ('jours_total_periode', models.IntegerField(default=0, verbose_name='Jours totaux de la période')),
                ('jours_hors_service', models.IntegerField(default=0, verbose_name='Jours hors service')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilites', to='fleet_app.vehicule')),
            ],
            options={
                'verbose_name': 'Disponibilité de véhicule',
                'verbose_name_plural': 'Disponibilités de véhicules',
            },
        ),
        migrations.CreateModel(
            name='CoutFonctionnement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Date')),
                ('type_cout', models.CharField(max_length=50, verbose_name='Type de coût')),
                ('montant', models.FloatField(verbose_name='Montant')),
                ('kilometrage', models.IntegerField(verbose_name='Kilométrage')),
                ('cout_par_km', models.FloatField(verbose_name='Coût par km')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='couts_fonctionnement', to='fleet_app.vehicule')),
            ],
            options={
                'verbose_name': 'Coût de fonctionnement',
                'verbose_name_plural': 'Coûts de fonctionnement',
            },
        ),
        migrations.CreateModel(
            name='CoutFinancier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Date')),
                ('type_cout', models.CharField(max_length=50, verbose_name='Type de coût')),
                ('montant', models.FloatField(verbose_name='Montant')),
                ('kilometrage', models.IntegerField(verbose_name='Kilométrage')),
                ('cout_par_km', models.FloatField(verbose_name='Coût par km')),
                ('periode_amortissement', models.IntegerField(verbose_name="Période d'amortissement")),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='couts_financiers', to='fleet_app.vehicule')),
            ],
            options={
                'verbose_name': 'Coût financier',
                'verbose_name_plural': 'Coûts financiers',
            },
        ),
        migrations.CreateModel(
            name='ConsommationCarburant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_plein1', models.DateField(verbose_name='Date du premier plein')),
                ('km_plein1', models.IntegerField(verbose_name='Kilométrage au premier plein')),
                ('date_plein2', models.DateField(verbose_name='Date du second plein')),
                ('km_plein2', models.IntegerField(verbose_name='Kilométrage au second plein')),
                ('litres_ajoutes', models.FloatField(verbose_name='Litres ajoutés')),
                ('distance_parcourue', models.IntegerField(verbose_name='Distance parcourue')),
                ('consommation_100km', models.FloatField(verbose_name='Consommation aux 100km')),
                ('consommation_constructeur', models.FloatField(blank=True, null=True, verbose_name='Consommation constructeur')),
                ('ecart_constructeur', models.FloatField(blank=True, null=True, verbose_name='Écart avec constructeur')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consommations', to='fleet_app.vehicule')),
            ],
            options={
                'verbose_name': 'Consommation de carburant',
                'verbose_name_plural': 'Consommations de carburant',
            },
        ),
        migrations.CreateModel(
            name='Alerte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('niveau', models.CharField(choices=[('Faible', 'Faible'), ('Moyen', 'Moyen'), ('Élevé', 'Élevé'), ('Critique', 'Critique')], default='Moyen', max_length=20, verbose_name="Niveau d'urgence")),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('statut', models.CharField(choices=[('Active', 'Active'), ('Résolue', 'Résolue'), ('Ignorée', 'Ignorée')], default='Active', max_length=20, verbose_name='Statut')),
                ('resolution', models.TextField(blank=True, null=True, verbose_name='Résolution')),
                ('date_resolution', models.DateTimeField(blank=True, null=True, verbose_name='Date de résolution')),
                ('vehicule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertes', to='fleet_app.vehicule', verbose_name='Véhicule concerné')),
            ],
            options={
                'verbose_name': 'Alerte',
                'verbose_name_plural': 'Alertes',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ArchiveMensuelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.IntegerField(verbose_name='Mois (1-12)')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('statut', models.CharField(choices=[('En cours', 'En cours'), ('Clôturé', 'Clôturé'), ('Archivé', 'Archivé')], default='En cours', max_length=20, verbose_name='Statut')),
                ('nb_employes_actifs', models.IntegerField(default=0, verbose_name="Nombre d'employés actifs")),
                ('nb_jours_travailles', models.IntegerField(default=0, verbose_name='Nombre de jours travaillés')),
                ('donnees_presences', models.JSONField(default=dict, verbose_name='Données de présences archivées')),
                ('donnees_paies', models.JSONField(default=dict, verbose_name='Données de paies archivées')),
                ('donnees_heures_supp', models.JSONField(default=dict, verbose_name="Données d'heures supplémentaires archivées")),
                ('total_salaire_brut', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total salaire brut')),
                ('total_deductions', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total déductions')),
                ('total_net_paye', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total net payé')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_cloture', models.DateTimeField(blank=True, null=True, verbose_name='Date de clôture')),
                ('commentaires', models.TextField(blank=True, verbose_name='Commentaires')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Archive mensuelle',
                'verbose_name_plural': 'Archives mensuelles',
                'ordering': ['-annee', '-mois'],
                'unique_together': {('user', 'mois', 'annee')},
            },
        ),
        migrations.CreateModel(
            name='HeureSupplementaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('heure_debut', models.TimeField(verbose_name='Heure de début')),
                ('heure_fin', models.TimeField(verbose_name='Heure de fin')),
                ('autorise_par', models.CharField(blank=True, max_length=100, null=True, verbose_name='Autorisé par')),
                ('duree', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Durée (heures)')),
                ('taux_horaire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Taux horaire personnalisé')),
                ('total_a_payer', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total à payer')),
                ('type_jour', models.CharField(choices=[('ouvrable', 'Jour ouvrable'), ('dimanche', 'Dimanche'), ('ferie', 'Jour férié')], default='ouvrable', max_length=20, verbose_name='Type de jour')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet_app.employe', verbose_name='Employé')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Heure supplémentaire',
                'verbose_name_plural': 'Heures supplémentaires',
                'db_table': 'HeuresSupplementaires',
                'unique_together': {('employe', 'date', 'heure_debut')},
            },
        ),
        migrations.CreateModel(
            name='PaieEmploye',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.IntegerField(verbose_name='Mois')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('salaire_base', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire de base')),
                ('salaire_brut', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire brut')),
                ('salaire_net', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire net')),
                ('salaire_net_a_payer', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire net à payer')),
                ('jours_mois', models.IntegerField(default=0, verbose_name='Jours du mois')),
                ('jours_presence', models.IntegerField(default=0, verbose_name='Jours de présence')),
                ('jours_repos', models.IntegerField(default=0, verbose_name='Jours de repos')),
                ('absences', models.IntegerField(default=0, verbose_name='Absences')),
                ('dimanches', models.IntegerField(default=0, verbose_name='Dimanches')),
                ('conge', models.IntegerField(default=0, verbose_name='Congés')),
                ('montant_jours_travailles', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant jours travaillés')),
                ('heures_supplementaires', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Heures supplémentaires')),
                ('montant_heures_supplementaires', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant heures supplémentaires')),
                ('montant_heures_supplement_dimanches', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant heures supp. dimanches')),
                ('indemnite_transport', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Indemnité transport')),
                ('indemnite_logement', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Indemnité logement')),
                ('cherete_vie', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cherté de vie')),
                ('prime_discipline', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prime discipline')),
                ('prime_ferie', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prime férié')),
                ('cnss', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='CNSS')),
                ('rts', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='RTS')),
                ('vf', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='VF')),
                ('avance_sur_salaire', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Avance sur salaire')),
                ('sanction_vol_carburant', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Sanction vol carburant')),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet_app.employe', verbose_name='Employé')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paie employé',
                'verbose_name_plural': 'Paies employés',
                'db_table': 'PaieEmployes',
                'unique_together': {('employe', 'mois', 'annee')},
            },
        ),
        migrations.CreateModel(
            name='PresenceJournaliere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('present', models.BooleanField(default=True, verbose_name='Présent')),
                ('statut', models.CharField(blank=True, max_length=50, null=True, verbose_name='Statut')),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet_app.employe', verbose_name='Employé')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PresenceJournaliere',
                'unique_together': {('employe', 'date')},
            },
        ),
        migrations.CreateModel(
            name='SalaireMensuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.IntegerField(verbose_name='Mois')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('salaire_base', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire de base')),
                ('brut', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire brut')),
                ('salaire_net', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Salaire net')),
                ('net_a_payer', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Net à payer')),
                ('jours_mois', models.IntegerField(default=0, verbose_name='Jours du mois')),
                ('jours_travailles', models.IntegerField(default=0, verbose_name='Jours travaillés')),
                ('jours_absents', models.IntegerField(default=0, verbose_name='Jours absents')),
                ('jours_off', models.IntegerField(default=0, verbose_name='Jours off')),
                ('dimanches_travailles', models.IntegerField(default=0, verbose_name='Dimanches travaillés')),
                ('heures_temps_supp', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Heures temps supplémentaire')),
                ('montant_temps_supp', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant temps supplémentaire')),
                ('ind_transport', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Indemnité transport')),
                ('ind_logement', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Indemnité logement')),
                ('cherte_vie', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cherté de vie')),
                ('prime_discipline', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prime discipline')),
                ('prime_ferie', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prime férié')),
                ('prime_dimanche', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prime dimanche')),
                ('cnss', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='CNSS')),
                ('rts', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='RTS')),
                ('vf', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='VF')),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet_app.employe', verbose_name='Employé')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Salaire mensuel',
                'verbose_name_plural': 'Salaires mensuels',
                'db_table': 'SalaireMensuel',
                'unique_together': {('employe', 'mois', 'annee')},
            },
        ),
    ]
