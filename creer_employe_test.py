#!/usr/bin/env python
"""
Script pour cr√©er un employ√© de test pour le syst√®me de pointage
"""

import os
import sys
import django
from django.contrib.auth.models import User

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'fleet_management.settings')
django.setup()

def creer_employe_test():
    """
    Cr√©e un employ√© de test
    """
    try:
        from fleet_app.models_entreprise import Employe
        
        # R√©cup√©rer le premier utilisateur (admin)
        user = User.objects.first()
        if not user:
            print("‚ùå Aucun utilisateur trouv√©. Veuillez d'abord cr√©er un utilisateur admin.")
            return False
        
        print(f"üë§ Utilisateur trouv√©: {user.username}")
        
        # V√©rifier si l'employ√© existe d√©j√†
        employe_existant = Employe.objects.filter(matricule='TEST001').first()
        if employe_existant:
            print(f"‚úÖ Employ√© de test existe d√©j√†: {employe_existant.nom} {employe_existant.prenom}")
            return True
        
        # Cr√©er l'employ√© de test
        employe = Employe.objects.create(
            user=user,
            matricule='TEST001',
            nom='DUPONT',
            prenom='Jean',
            fonction='Testeur',
            telephone='123456789',
            date_embauche='2024-01-01',
            salaire_journalier=50000,
            statut='Actif',
            taux_horaire_specifique=5000,
            avances=0
        )
        
        print(f"‚úÖ Employ√© de test cr√©√© avec succ√®s:")
        print(f"   - Nom: {employe.nom} {employe.prenom}")
        print(f"   - Matricule: {employe.matricule}")
        print(f"   - Fonction: {employe.fonction}")
        print(f"   - Salaire journalier: {employe.salaire_journalier} GNF")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation de l'employ√©: {str(e)}")
        return False

def main():
    """
    Fonction principale
    """
    print("=" * 50)
    print("üß™ CR√âATION D'EMPLOY√â DE TEST")
    print("=" * 50)
    print()
    
    success = creer_employe_test()
    
    print("\n" + "=" * 50)
    if success:
        print("‚úÖ EMPLOY√â DE TEST CR√â√â AVEC SUCC√àS")
        print("\nüí° Vous pouvez maintenant:")
        print("   1. Aller sur /pointage/")
        print("   2. Cliquer sur les cellules pour pointer")
        print("   3. Tester les diff√©rents statuts")
    else:
        print("‚ùå √âCHEC DE LA CR√âATION")
    print("=" * 50)

if __name__ == "__main__":
    main()
